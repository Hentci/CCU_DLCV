Command Line Args: Namespace(config_file='resnet50-3.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50166', opts=[])
[04/01 20:06:37 detectron2]: Rank of current process: 0. World size: 1
cuobjdump info    : File '/trainingData/sage/DLCV_hentci/EX1/detectron2/detectron2/_C.cpython-39-x86_64-linux-gnu.so' does not contain device code
[04/01 20:06:38 detectron2]: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.9.19 (main, Mar 21 2024, 17:11:28) [GCC 11.2.0]
numpy                            1.24.1
detectron2                       0.6 @/trainingData/sage/DLCV_hentci/EX1/detectron2/detectron2
detectron2._C                    not built correctly: /trainingData/sage/DLCV_hentci/EX1/detectron2/detectron2/_C.cpython-39-x86_64-linux-gnu.so: undefined symbol: _ZNR5torch7Library4_defEON3c106eitherINS1_12OperatorNameENS1_14FunctionSchemaEEEONS_11CppFunctionE
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Build cuda_11.0_bu.TC445_37.28540450_0
detectron2 arch flags            /trainingData/sage/DLCV_hentci/EX1/detectron2/detectron2/_C.cpython-39-x86_64-linux-gnu.so
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.2.2+cu118 @/home/sage/miniconda3/envs/DLCVV/lib/python3.9/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version                   470.239.06
CUDA_HOME                        /usr/local/cuda-11.0
Pillow                           10.2.0
torchvision                      0.17.2+cu118 @/home/sage/miniconda3/envs/DLCVV/lib/python3.9/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              Not found
-------------------------------  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.3.2 (Git Hash 2dc95a2ad0841e29db8b22fbccaf3e5da7992b01)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.2.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[04/01 20:06:38 detectron2]: Command line arguments: Namespace(config_file='resnet50-3.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50166', opts=[])
[04/01 20:06:38 detectron2]: Contents of args.config_file=resnet50-3.yaml:
_BASE_: "detectron2/configs/Base-RCNN-FPN-cityscapes.yaml"

INPUT:
  MIN_SIZE_TRAIN: (800,)
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MAX_SIZE_TEST: 1333


MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl" 
  MASK_ON: False
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
  RESNETS:
    DEPTH: 50
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
  ROI_HEADS:
    NUM_CLASSES: 8

DATASETS:
  TRAIN: ("cityscapes_train_voc",)
  TEST: ("cityscapes_test_voc",)
  
SOLVER:
  IMS_PER_BATCH: 2
  BASE_LR: 0.0025
  STEPS: (21000, 50000)
  MAX_ITER: 70000

OUTPUT_DIR: "./output_third_r-50"  

# 其他配置...

# python -m pip install -e .
[04/01 20:06:38 detectron2]: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_test_voc
  TRAIN:
  - cityscapes_train_voc
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
    - - 64
    - - 128
    - - 256
    - - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: FastRCNNConvFCHead
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 8
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    - p6
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output_third_r-50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.0025
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 70000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 21000
  - 50000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/01 20:06:38 detectron2]: Full config saved to ./output_third_r-50/config.yaml
[04/01 20:06:38 d2.utils.env]: Using a generated random seed 41362889
[04/01 20:06:40 d2.engine.defaults]: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=9, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=32, bias=True)
    )
  )
)
[04/01 20:06:40 d2.data.build]: Removed 0 images with no usable annotations. 2965 images left.
[04/01 20:06:41 d2.data.build]: Distribution of instances among all 8 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|   truck    | 489          |    car     | 27155        |   rider    | 1807         |
|   person   | 17994        |   train    | 171          | motorcycle | 739          |
|  bicycle   | 3729         |    bus     | 385          |            |              |
|   total    | 52469        |            |              |            |              |
[04/01 20:06:41 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[04/01 20:06:41 d2.data.build]: Using training sampler TrainingSampler
[04/01 20:06:41 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/01 20:06:41 d2.data.common]: Serializing 2965 elements to byte tensors and concatenating them all ...
[04/01 20:06:41 d2.data.common]: Serialized dataset takes 4.05 MiB
[04/01 20:06:41 d2.data.build]: Making batched data loader with batch_size=2
[04/01 20:06:41 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[04/01 20:06:41 fvcore.common.checkpoint]: [Checkpointer] Loading from /home/sage/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[04/01 20:06:41 d2.checkpoint.c2_model_loading]: Renaming Caffe2 weights ......
[04/01 20:06:41 d2.checkpoint.c2_model_loading]: Following weights matched with submodule backbone.bottom_up - Total num: 54
WARNING [04/01 20:06:41 fvcore.common.checkpoint]: Some model parameters or buffers are not found in the checkpoint:
backbone.fpn_lateral2.{bias, weight}
backbone.fpn_lateral3.{bias, weight}
backbone.fpn_lateral4.{bias, weight}
backbone.fpn_lateral5.{bias, weight}
backbone.fpn_output2.{bias, weight}
backbone.fpn_output3.{bias, weight}
backbone.fpn_output4.{bias, weight}
backbone.fpn_output5.{bias, weight}
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_head.fc1.{bias, weight}
roi_heads.box_head.fc2.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
WARNING [04/01 20:06:41 fvcore.common.checkpoint]: The checkpoint state_dict contains keys that are not used by the model:
  fc1000.{bias, weight}
  stem.conv1.bias
[04/01 20:06:41 d2.engine.train_loop]: Starting training from iteration 0
/home/sage/miniconda3/envs/DLCVV/lib/python3.9/site-packages/torch/functional.py:507: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3549.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
[04/01 20:06:46 d2.utils.events]:  eta: 2:35:46  iter: 19  total_loss: 2.966  loss_cls: 1.925  loss_box_reg: 0.01847  loss_rpn_cls: 0.7007  loss_rpn_loc: 0.4004    time: 0.1335  last_time: 0.1346  data_time: 0.0150  last_data_time: 0.0033   lr: 4.9953e-05  max_mem: 1997M
[04/01 20:06:48 d2.utils.events]:  eta: 2:35:46  iter: 39  total_loss: 1.325  loss_cls: 0.2515  loss_box_reg: 0.01694  loss_rpn_cls: 0.6849  loss_rpn_loc: 0.3493    time: 0.1336  last_time: 0.1331  data_time: 0.0035  last_data_time: 0.0035   lr: 9.9903e-05  max_mem: 2053M
[04/01 20:06:51 d2.utils.events]:  eta: 2:35:18  iter: 59  total_loss: 1.236  loss_cls: 0.2445  loss_box_reg: 0.02762  loss_rpn_cls: 0.6505  loss_rpn_loc: 0.3187    time: 0.1336  last_time: 0.1356  data_time: 0.0034  last_data_time: 0.0032   lr: 0.00014985  max_mem: 2255M
[04/01 20:06:54 d2.utils.events]:  eta: 2:35:31  iter: 79  total_loss: 1.126  loss_cls: 0.2001  loss_box_reg: 0.03274  loss_rpn_cls: 0.6167  loss_rpn_loc: 0.3005    time: 0.1336  last_time: 0.1332  data_time: 0.0035  last_data_time: 0.0037   lr: 0.0001998  max_mem: 2255M
[04/01 20:06:57 d2.utils.events]:  eta: 2:35:34  iter: 99  total_loss: 1.077  loss_cls: 0.2133  loss_box_reg: 0.0408  loss_rpn_cls: 0.5722  loss_rpn_loc: 0.2594    time: 0.1337  last_time: 0.1321  data_time: 0.0035  last_data_time: 0.0035   lr: 0.00024975  max_mem: 2261M
[04/01 20:06:59 d2.utils.events]:  eta: 2:35:33  iter: 119  total_loss: 1.036  loss_cls: 0.208  loss_box_reg: 0.07501  loss_rpn_cls: 0.4943  loss_rpn_loc: 0.2466    time: 0.1336  last_time: 0.1310  data_time: 0.0037  last_data_time: 0.0037   lr: 0.0002997  max_mem: 2261M
[04/01 20:07:02 d2.utils.events]:  eta: 2:35:06  iter: 139  total_loss: 1.082  loss_cls: 0.2258  loss_box_reg: 0.07941  loss_rpn_cls: 0.4388  loss_rpn_loc: 0.2897    time: 0.1330  last_time: 0.1286  data_time: 0.0033  last_data_time: 0.0030   lr: 0.00034965  max_mem: 2261M
[04/01 20:07:04 d2.utils.events]:  eta: 2:34:51  iter: 159  total_loss: 0.9604  loss_cls: 0.2255  loss_box_reg: 0.06957  loss_rpn_cls: 0.3271  loss_rpn_loc: 0.3101    time: 0.1326  last_time: 0.1319  data_time: 0.0034  last_data_time: 0.0033   lr: 0.0003996  max_mem: 2312M
[04/01 20:07:07 d2.utils.events]:  eta: 2:34:24  iter: 179  total_loss: 1.034  loss_cls: 0.2892  loss_box_reg: 0.1166  loss_rpn_cls: 0.2701  loss_rpn_loc: 0.3399    time: 0.1324  last_time: 0.1302  data_time: 0.0034  last_data_time: 0.0035   lr: 0.00044955  max_mem: 2312M
[04/01 20:07:10 d2.utils.events]:  eta: 2:34:30  iter: 199  total_loss: 0.8705  loss_cls: 0.2555  loss_box_reg: 0.149  loss_rpn_cls: 0.1976  loss_rpn_loc: 0.2227    time: 0.1325  last_time: 0.1325  data_time: 0.0039  last_data_time: 0.0038   lr: 0.0004995  max_mem: 2312M
[04/01 20:07:12 d2.utils.events]:  eta: 2:34:10  iter: 219  total_loss: 1.026  loss_cls: 0.2727  loss_box_reg: 0.2016  loss_rpn_cls: 0.1761  loss_rpn_loc: 0.3317    time: 0.1323  last_time: 0.1296  data_time: 0.0034  last_data_time: 0.0029   lr: 0.00054945  max_mem: 2312M
[04/01 20:07:15 d2.utils.events]:  eta: 2:33:53  iter: 239  total_loss: 1.133  loss_cls: 0.3181  loss_box_reg: 0.275  loss_rpn_cls: 0.1641  loss_rpn_loc: 0.2855    time: 0.1321  last_time: 0.1312  data_time: 0.0034  last_data_time: 0.0035   lr: 0.0005994  max_mem: 2312M
[04/01 20:07:18 d2.utils.events]:  eta: 2:33:57  iter: 259  total_loss: 1.119  loss_cls: 0.3502  loss_box_reg: 0.4019  loss_rpn_cls: 0.1382  loss_rpn_loc: 0.222    time: 0.1322  last_time: 0.1307  data_time: 0.0037  last_data_time: 0.0035   lr: 0.00064935  max_mem: 2312M
[04/01 20:07:20 d2.utils.events]:  eta: 2:33:47  iter: 279  total_loss: 1.12  loss_cls: 0.336  loss_box_reg: 0.3116  loss_rpn_cls: 0.1285  loss_rpn_loc: 0.2793    time: 0.1321  last_time: 0.1323  data_time: 0.0035  last_data_time: 0.0034   lr: 0.0006993  max_mem: 2312M
[04/01 20:07:23 d2.utils.events]:  eta: 2:33:44  iter: 299  total_loss: 1.205  loss_cls: 0.4337  loss_box_reg: 0.4553  loss_rpn_cls: 0.1096  loss_rpn_loc: 0.2391    time: 0.1322  last_time: 0.1318  data_time: 0.0035  last_data_time: 0.0035   lr: 0.00074925  max_mem: 2312M
[04/01 20:07:26 d2.utils.events]:  eta: 2:33:40  iter: 319  total_loss: 1.188  loss_cls: 0.3595  loss_box_reg: 0.4072  loss_rpn_cls: 0.1218  loss_rpn_loc: 0.2456    time: 0.1322  last_time: 0.1293  data_time: 0.0037  last_data_time: 0.0034   lr: 0.0007992  max_mem: 2312M
[04/01 20:07:28 d2.utils.events]:  eta: 2:33:22  iter: 339  total_loss: 1.059  loss_cls: 0.3353  loss_box_reg: 0.4154  loss_rpn_cls: 0.1141  loss_rpn_loc: 0.2627    time: 0.1320  last_time: 0.1285  data_time: 0.0036  last_data_time: 0.0034   lr: 0.00084915  max_mem: 2312M
[04/01 20:07:31 d2.utils.events]:  eta: 2:33:12  iter: 359  total_loss: 1.142  loss_cls: 0.3282  loss_box_reg: 0.3904  loss_rpn_cls: 0.1333  loss_rpn_loc: 0.2775    time: 0.1320  last_time: 0.1288  data_time: 0.0035  last_data_time: 0.0029   lr: 0.0008991  max_mem: 2312M
[04/01 20:07:34 d2.utils.events]:  eta: 2:33:02  iter: 379  total_loss: 1.21  loss_cls: 0.3421  loss_box_reg: 0.4877  loss_rpn_cls: 0.1012  loss_rpn_loc: 0.2225    time: 0.1319  last_time: 0.1334  data_time: 0.0033  last_data_time: 0.0036   lr: 0.00094905  max_mem: 2312M
[04/01 20:07:36 d2.utils.events]:  eta: 2:32:57  iter: 399  total_loss: 1.222  loss_cls: 0.3392  loss_box_reg: 0.4256  loss_rpn_cls: 0.1046  loss_rpn_loc: 0.3462    time: 0.1319  last_time: 0.1333  data_time: 0.0032  last_data_time: 0.0031   lr: 0.000999  max_mem: 2312M
[04/01 20:07:39 d2.utils.events]:  eta: 2:32:52  iter: 419  total_loss: 1.235  loss_cls: 0.3871  loss_box_reg: 0.4582  loss_rpn_cls: 0.101  loss_rpn_loc: 0.2602    time: 0.1319  last_time: 0.1313  data_time: 0.0033  last_data_time: 0.0033   lr: 0.001049  max_mem: 2312M
[04/01 20:07:42 d2.utils.events]:  eta: 2:32:52  iter: 439  total_loss: 1.342  loss_cls: 0.4241  loss_box_reg: 0.5309  loss_rpn_cls: 0.08999  loss_rpn_loc: 0.2293    time: 0.1320  last_time: 0.1316  data_time: 0.0036  last_data_time: 0.0032   lr: 0.0010989  max_mem: 2312M
[04/01 20:07:44 d2.utils.events]:  eta: 2:32:58  iter: 459  total_loss: 1.317  loss_cls: 0.4232  loss_box_reg: 0.5748  loss_rpn_cls: 0.08516  loss_rpn_loc: 0.1793    time: 0.1322  last_time: 0.1331  data_time: 0.0036  last_data_time: 0.0034   lr: 0.0011489  max_mem: 2312M
[04/01 20:07:47 d2.utils.events]:  eta: 2:33:05  iter: 479  total_loss: 1.368  loss_cls: 0.4406  loss_box_reg: 0.6394  loss_rpn_cls: 0.09556  loss_rpn_loc: 0.2488    time: 0.1323  last_time: 0.1323  data_time: 0.0035  last_data_time: 0.0034   lr: 0.0011988  max_mem: 2312M
[04/01 20:07:50 d2.utils.events]:  eta: 2:33:01  iter: 499  total_loss: 1.313  loss_cls: 0.3781  loss_box_reg: 0.567  loss_rpn_cls: 0.1085  loss_rpn_loc: 0.2524    time: 0.1323  last_time: 0.1326  data_time: 0.0035  last_data_time: 0.0034   lr: 0.0012488  max_mem: 2312M
[04/01 20:07:52 d2.utils.events]:  eta: 2:33:00  iter: 519  total_loss: 1.28  loss_cls: 0.3896  loss_box_reg: 0.4977  loss_rpn_cls: 0.1061  loss_rpn_loc: 0.2395    time: 0.1323  last_time: 0.1320  data_time: 0.0034  last_data_time: 0.0033   lr: 0.0012987  max_mem: 2312M
[04/01 20:07:55 d2.utils.events]:  eta: 2:32:57  iter: 539  total_loss: 1.376  loss_cls: 0.4193  loss_box_reg: 0.546  loss_rpn_cls: 0.08263  loss_rpn_loc: 0.2393    time: 0.1323  last_time: 0.1322  data_time: 0.0035  last_data_time: 0.0033   lr: 0.0013487  max_mem: 2312M
[04/01 20:07:58 d2.utils.events]:  eta: 2:32:55  iter: 559  total_loss: 1.198  loss_cls: 0.3638  loss_box_reg: 0.537  loss_rpn_cls: 0.09635  loss_rpn_loc: 0.1962    time: 0.1323  last_time: 0.1361  data_time: 0.0037  last_data_time: 0.0038   lr: 0.0013986  max_mem: 2312M
[04/01 20:08:00 d2.utils.events]:  eta: 2:32:57  iter: 579  total_loss: 1.355  loss_cls: 0.4415  loss_box_reg: 0.6604  loss_rpn_cls: 0.09307  loss_rpn_loc: 0.1739    time: 0.1323  last_time: 0.1356  data_time: 0.0036  last_data_time: 0.0036   lr: 0.0014486  max_mem: 2312M
[04/01 20:08:03 d2.utils.events]:  eta: 2:32:56  iter: 599  total_loss: 1.325  loss_cls: 0.4236  loss_box_reg: 0.5787  loss_rpn_cls: 0.08973  loss_rpn_loc: 0.2563    time: 0.1323  last_time: 0.1321  data_time: 0.0034  last_data_time: 0.0034   lr: 0.0014985  max_mem: 2312M
[04/01 20:08:06 d2.utils.events]:  eta: 2:32:56  iter: 619  total_loss: 1.378  loss_cls: 0.4431  loss_box_reg: 0.6104  loss_rpn_cls: 0.08336  loss_rpn_loc: 0.2451    time: 0.1323  last_time: 0.1334  data_time: 0.0034  last_data_time: 0.0035   lr: 0.0015485  max_mem: 2312M
[04/01 20:08:08 d2.utils.events]:  eta: 2:32:50  iter: 639  total_loss: 1.377  loss_cls: 0.4052  loss_box_reg: 0.5713  loss_rpn_cls: 0.07624  loss_rpn_loc: 0.2835    time: 0.1323  last_time: 0.1314  data_time: 0.0035  last_data_time: 0.0036   lr: 0.0015984  max_mem: 2312M
